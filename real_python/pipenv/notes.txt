Dependencies:
 classical solution:
 1) requirements.txt
    specify the software version you have used in development and then use pip install -r requirements.txt
 2) virtual Environment
 latest solution:
 pipenv replace pip and virtual env
Distribution of code:
  1) As a pacakage:
     using setuptools and a accompyanying setup.py
       setup.py
       install_requires keyword should include whatever package "minimally need to run correctely"
       Pipfile
       represent the concresete requirements for your pacakage
       pull the minimally required dependencies from setup.py by installing your package using Pipenv:
          use pipenv install '--e .'
          that will result in a line in your Pipfile that looks something like
            "e1839a8" = {path=".", editable = true}.
      pipfile.lock
      Details for a reproduciable environment generated from pipenv lock
  2) Not as a package:
    you really don't need setup.py
    In this situation, you could use Pipfile/Pipfile.lock combo for managing your dependencies with the flow described
    previously
